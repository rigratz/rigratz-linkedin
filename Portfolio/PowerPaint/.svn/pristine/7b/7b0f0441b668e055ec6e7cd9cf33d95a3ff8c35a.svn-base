package tools;

import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.geom.Path2D;

//import java.awt.geom.Path2D;
import java.util.Iterator;
import java.util.List;

/**
 * 
 * @author Riley Gratzer
 * @version 1.2
 */
public class Pencil extends AbstractTool {

    /**
     * Constructor of the Pencil tool.
     */
    public Pencil() {
        super('P');
        // TODO Auto-generated constructor stub
    }

    /**
     * @param theGraphics g
     * @param thePath is a set of points.
     */
    @Override
    public void drawShape(final Graphics2D theGraphics, final List<Point> thePath) { 
        final Path2D.Double path = new Path2D.Double(Path2D.WIND_EVEN_ODD);
        
//        if (!thePath.isEmpty()) {
//            final Iterator<Point> itr = thePath.iterator();
//            Point p1 = itr.next();
//            while (itr.hasNext()) {
//                final Point p2 = itr.next();
//                theGraphics.draw(new Ellipse2D.Double(p1.x, p1.y, 0.1, 0.1));
//                p1 = p2;
//            }
//        }


        
        if (!thePath.isEmpty()) {
            final Iterator<Point> itr = thePath.iterator();
            Point p1 = itr.next();
            path.moveTo(p1.x, p1.y);
            while (itr.hasNext()) {
                final Point p2 = itr.next();
                path.lineTo(p2.x, p2.y);
                path.moveTo(p2.x,  p2.y);
                p1 = p2;
            }
            theGraphics.draw(path);
        }
    }
}
