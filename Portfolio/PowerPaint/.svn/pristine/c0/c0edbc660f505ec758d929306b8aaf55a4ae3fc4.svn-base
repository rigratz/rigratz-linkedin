package GUI;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.awt.geom.Line2D;

import javax.swing.JPanel;
import javax.tools.Tool;

import tools.Line;


public class DrawingPanel extends JPanel {

    //private Line myLine;
    private int myInitX;
    private int myInitY;
    private int myFinX;
    private int myFinY;
    private Point p1;
    private Point p2;
    private boolean drawing;
    private Line2D myLine;
    //private final Tool myTool;
    
    public DrawingPanel() {
        super();
        myInitX = 0;
        myInitY = 0;
        myFinX = 0;
        myFinY = 0;
        //this.setSize(400, 200);
        p1 = new Point();
        p2 = new Point();
        myLine = new Line2D.Double(p1, p2);
        this.addMouseListener(new MouseActions());
        addMouseMotionListener(new MouseMotionAdapter() {
            public void mouseMoved(final MouseEvent theE) {
                //p2 = theE.getPoint();
            }

            public void mouseDragged(final MouseEvent theE) {
                
                p2 = theE.getPoint();
                repaint();
            }
        });
    }
    
    @Override
    public void paintComponent(final Graphics theGraphics) {
        super.paintComponent(theGraphics);
        final Graphics2D g = (Graphics2D) theGraphics;
        //setPreferredSize(new Dimension(400, 200));
        setBackground(Color.WHITE);
        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                           RenderingHints.VALUE_ANTIALIAS_ON);
        g.setColor(Color.BLACK);
        g.setStroke(new BasicStroke());
        g.draw(new Line2D.Double(p1, p2));
        
    }

    class MouseActions extends MouseAdapter {
        @Override
        public void mousePressed(MouseEvent e) {
            drawing = true;
            p1 = e.getPoint();
            p2 = p1;
            //myLine = new Line2D.Double(p1, p2);
            
            repaint();
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            drawing = false;
            p2 = e.getPoint();
            //myLine = new Line2D.Double(p1, p2);
            
            repaint();
        }

        @Override
        public void mouseDragged(MouseEvent e) {
            if (drawing) {
                p2 = e.getPoint();
                //myLine = new Line2D.Double(p1, p2);
                
                repaint();
                //paintImmediately(p1.x, p1.y, p2.x, p2.y);
            }
        }
    }
}
